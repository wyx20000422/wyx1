<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- 0. Spring 基础配置 -->
	<!-- 0.1 设置注解驱动 -->
	<context:component-scan base-package="com.duke" />


	<!-- 1. 整合MyBatis -->
	<!-- 1.1 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/dukeluntan?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf-8&amp;serverTimezone=UTC" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- 1.2 托管SQLSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 设置bean别名 -->
		<property name="typeAliasesPackage" value="com.duke.model.entity" />
		<!-- 设置mappers位置 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/duke/model/dao/*.xml</value>
			</list>
		</property>
		<!-- 配置分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							reasonable=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	<!-- 1.3 设置Dao扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<!-- 设置Dao位置 -->
		<property name="basePackage" value="com.duke.model.dao"></property>
	</bean>

	<!-- 1.4 设置声明式事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置通知Spring容器对注解@Transaction的Bean处理 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!--配置事务增强处理，指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="mod*" propagation="REQUIRED" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="check*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- proxy-target-class设置为true, Spring可以直接代理一个类, 而不是一个接口 -->
	<aop:config proxy-target-class="true">

		<!--配置一个切入点，匹配fruit.dao下所有类执行的方法 -->
		<aop:pointcut id="interceptorPointCuts"
			expression="execution(* com.mavendemo.model.services..*.*(..))" />
		<!--指定在poincut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>


</beans>